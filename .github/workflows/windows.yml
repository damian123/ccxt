name: windows

on: 
  push:
  pull_request:
    types: [ opened, synchronize, closed, ready_for_review, review_requested ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build:
    name: ${{matrix.os}}, ${{matrix.std}}, ${{matrix.build_type}}, ${{matrix.platform}}
    runs-on: ${{matrix.os}}    
    strategy:
      matrix:
        os: [windows-2022]
        platform: [x64]
        build_type: [Debug, Release]
        # kind: [static, shared]
        std: [20]
    if: "!contains(github.event.head_commit.message, '[ci skip]') && !contains(github.event.head_commit.message, '[skip ci]')"
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true

    - name: Setup devcmd
      uses: ilammy/msvc-dev-cmd@v1

    - name: Get latest CMake
      uses: lukka/get-cmake@latest
    
    - name: Install build tools
      run: 
        choco install ninja

    # use the preinstalled vcpkg from image
    # https://github.com/actions/virtual-environments/blob/main/images/win/Windows2019-Readme.md#package-management
    - name: Setup vcpkg
      uses: lukka/run-vcpkg@v11      
      with:
          vcpkgJsonGlob: 'vcpkg.json'
          doNotUpdateVcpkg: true  # the preinstalled vcpkg is updated regularly

    - name: Build ccxt
      run: |
        cmake `
          -B ${{runner.workspace}}/build `
          -G "Ninja" `
          -DCMAKE_BUILD_TYPE=${{matrix.build_type}} `
          -DCMAKE_CXX_FLAGS="/WX" `
          -DCMAKE_EXPORT_COMPILE_COMMANDS=ON `
          -DCMAKE_TOOLCHAIN_FILE="${{ env.RUNVCPKG_VCPKG_ROOT }}/scripts/buildsystems/vcpkg.cmake" `
          -DBUILD_SHARED_LIBS=OFF `
          -DMSVC_RUNTIME_DYNAMIC=OFF
        cmake --build ${{runner.workspace}}/build --config Debug
        cmake --build ${{runner.workspace}}/build --config Release

    - name: Test
      run: |    
        cd        
        echo "calling cpp\test\unit\tests.exe"
        cpp\test\unit\tests.exe
      shell: cmd
      working-directory: build

#${{runner.workspace}}/build/cpp/testunit/tests.exe
#${{runner.workspace}}/build/cpp/test/unit/base/test-base.exe
